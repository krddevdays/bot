name: KrdDevBot CI/CD Pipeline

on:
  push:
    branches:
      - cicd

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install PDM
      run: |
        python -m pip install --upgrade pip
        pip install pdm
    - name: Install dependencies using PDM
      run: |
        pdm install --dev
    - name: Run tests
      run: |
        pdm run pytest

  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install PDM
      run: |
        python -m pip install --upgrade pip
        pip install pdm
    - name: Install dependencies using PDM
      run: |
        pdm install --dev
    - name: Run linters
      run: |
        pdm run flake8

#  build:
#    needs: [test, lint]
#    runs-on: ubuntu-latest
#    steps:
#    - name: Checkout code
#      uses: actions/checkout@v4
#    - name: Set up Docker Buildx
#      uses: docker/setup-buildx-action@v3
#    - name: Login to Docker Hub
#      uses: docker/login-action@v3
#      with:
#        username: ${{ secrets.DOCKERHUB_USERNAME }}
#        password: ${{ secrets.DOCKERHUB_TOKEN }}
#    - name: Build and push
#      uses: docker/build-push-action@v5
#      with:
#        push: true
#        tags: krddev/bot:$GITHUB_REF_TYPE
#
#  deploy:
#    needs: [build]
#    runs-on: ubuntu-latest
#    steps:
#    - name: Add SSH key
#      uses: webfactory/ssh-agent@v0.5.3
#      with:
#        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
#
#    - name: Deploy
#      run: |
#        ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
#          cd ~/krddevbot
#          git pull
#          docker build -t krddev/bot:main .
#          sudo systemctl restart krddevbot.service
#        EOF
